<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:XXXX"
>

    <SolidColorBrush Color="#13317A"  x:Key="ButtonBackGround"></SolidColorBrush>
    <SolidColorBrush Color="White"  x:Key="ButtonForeGround"></SolidColorBrush>
    <SolidColorBrush Color="#C72003"  x:Key="DelectClickColor"></SolidColorBrush>
    <SolidColorBrush Color="#B2331D"  x:Key="DelectBackGround"></SolidColorBrush>
    <Style x:Key="DeleteButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}" />
        <Setter Property="Background" Value="{StaticResource DelectBackGround}"></Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border SnapsToDevicePixels="True"
                            x:Name="border">
                        <Grid>
                            <Ellipse Stroke="{TemplateBinding BorderBrush}" 
                                     StrokeThickness="{TemplateBinding BorderThickness}" 
                                     x:Name="bg"
                                     Fill="{TemplateBinding Background}"></Ellipse>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource DelectClickColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bg" Property="Fill" Value="{StaticResource DelectClickColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bg" Property="Fill" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginRadioButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource ButtonBackGround}" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBackGround}"></Setter>
        <Setter Property="Padding" Value="10,2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            x:Name="border">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackGround}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackGround}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackGround}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ButtonBackGround}" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBackGround}"></Setter>
        <Setter Property="Padding" Value="10,2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            x:Name="border">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackGround}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackGround}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonForeGround}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"  BorderBrush="Black" BorderThickness="0"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Image Height="{TemplateBinding Height}" x:Name="img" Source="../Resources/Icon/close_btn.png"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source" Value="../Resources/Icon/close_btn_press.png"></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Source" Value="../Resources/Icon/close_btn_press.png"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--自定义Datagrid模板-->
    <!-- Custom QuotaGrid Style -->
    <Style TargetType="{x:Type my:QuotaBaseGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
    </Style>




    <!--蓝色按钮样式-->
    <Style x:Key="buttonSelectorBlue" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="#FF5291FF"  BorderBrush="{x:Null}" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <TextBlock x:Name="lbContent" TextAlignment="Center"  Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Padding="0,0,0,0" Background="Transparent" Height="{TemplateBinding Height}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--绿色按钮样式-->
    <Style x:Key="buttonSelectorGreen" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="#FF4FFD6F"  BorderBrush="{x:Null}"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label x:Name="lbContent" Content="{TemplateBinding Content}" Padding="0,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center"></Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--红色按钮样式-->
    <Style x:Key="buttonSelectorRed" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="#FFFF5B5B"  BorderBrush="{x:Null}"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label x:Name="lbContent"  Content="{TemplateBinding Content}" Padding="0,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}" VerticalContentAlignment="Center"
                               VerticalAlignment="Center" HorizontalAlignment="Center"></Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--透明button样式-->
    <Style x:Key="buttonSelectorTransparent" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent"  BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label x:Name="lbContent"  Content="{TemplateBinding Content}" Padding="0,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"></Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--透明button样式(无边框)-->
    <Style x:Key="buttonSelectorTransparentNoBorder" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent"  BorderBrush="Black" BorderThickness="0"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Label x:Name="lbContent"  Content="{TemplateBinding Content}" Padding="0,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"></Label>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--下单界面表格中加号在左边的按钮样式-->
    <Style x:Key="buttonOrderGridLeft" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent"  BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <StackPanel Orientation="Horizontal" Margin="0,0,-1,-1">
                            <Label Content="+" VerticalAlignment="Center"/>
                            <Label x:Name="lbContent"  Content="{TemplateBinding Content}" Padding="10,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center" ></Label>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--下单界面表格中加号在右边的按钮样式-->
    <Style x:Key="buttonOrderGridRight" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent"  BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}"    CornerRadius="0.5" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid  Margin="0,0,-1,-1">
                            <Label x:Name="lbContent"  Content="{TemplateBinding Content}" Padding="0,0,0,0" Foreground="Black" Background="Transparent" Height="{TemplateBinding Height}"
                               VerticalAlignment="Center" HorizontalAlignment="Right" Margin="6.564,0,27.231,0" ></Label>
                            <Label Content="+" HorizontalAlignment="Right" VerticalAlignment="Center"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBFBFBF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--下单界面底部数值选择RadioButton样式-->

    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator  Background="Transparent">
                        <Grid>
                            <Label Background="#FF5291FF" Padding="0,0,0,0" Content="{TemplateBinding Content}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        </Grid>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" Value="#FF646464"/>
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--有图标button样式-->
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <BulletDecorator  Background="Transparent">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter  TargetName="Border" Property="Background" Value="Gray"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter  TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style x:Key="cbx" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="redBrush" Color="Red"/>
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Rectangle Name="breakRectangle" Stroke="Red" StrokeThickness="2" Width="20" Height="20">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="breakRectangle" Property="Fill" Value="{StaticResource ResourceKey=redBrush}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Combobox" TargetType="{x:Type ComboBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>



    </Style>

    <!--商品过滤TextBoxStyle-->
    <Style x:Key="TextBox" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="80"></Setter>
    </Style>

    <!--内容居中TextBlockStyle-->
    <Style x:Key="CenterAlignmentText" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--列表头文字居中TextBlockStyle-->
    <Style x:Key="CenterDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--提示错误信息的TextBoxStyle-->
    <Style x:Key="TextBoxErrorStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background" Value="#DDD"/>
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--提示错误信息的另一种样式-->
    <ControlTemplate x:Key="validErrorTextBoxTemplate">
        <DockPanel>
            <AdornedElementPlaceholder/>
            <TextBlock Foreground="Red" FontSize="20">*</TextBlock>
        </DockPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type commen:LimitTextBox}">
        <Setter Property="IsReadOnly" Value="False"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type commen:LimitTextBox}">
                    <Grid x:Name="PART_Root">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"></Border>
                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Margin="2"
                                      Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}"
                                      VerticalAlignment="Center" Background="{x:Null}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="LightGray" TargetName="Border"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
